// <auto-generated />
using Coreapp.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Coreapp.Migrations
{
    [DbContext(typeof(VehicleDbContext))]
    [Migration("20201119190232_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.0");

            modelBuilder.Entity("Coreapp.Models.VehicleMake", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Abrv")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("VehicleMake");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Abrv = "BMW",
                            Name = "Bayerische Motoren Werke AG"
                        },
                        new
                        {
                            Id = 2,
                            Abrv = "Mercedes",
                            Name = "Mercedes-Benz"
                        },
                        new
                        {
                            Id = 3,
                            Abrv = "Ford",
                            Name = "Ford Motor Company"
                        },
                        new
                        {
                            Id = 4,
                            Abrv = "Hyundai",
                            Name = "The Hyundai Motor Company"
                        },
                        new
                        {
                            Id = 5,
                            Abrv = "Mazda",
                            Name = "Mazda Motor Corporation"
                        },
                        new
                        {
                            Id = 6,
                            Abrv = "Porsche",
                            Name = "Porsche AG"
                        });
                });

            modelBuilder.Entity("Coreapp.Models.VehicleModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Abrv")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<int>("MakeId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("MakeId");

                    b.ToTable("VehicleModel");
                });

            modelBuilder.Entity("Coreapp.Models.VehicleModel", b =>
                {
                    b.HasOne("Coreapp.Models.VehicleMake", "Make")
                        .WithMany("VehicleModels")
                        .HasForeignKey("MakeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Make");
                });

            modelBuilder.Entity("Coreapp.Models.VehicleMake", b =>
                {
                    b.Navigation("VehicleModels");
                });
#pragma warning restore 612, 618
        }
    }
}
